name: SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:10.4.1  
        env:
          MYSQL_ROOT_PASSWORD: root123  
          MYSQL_DATABASE: default_db      
          MYSQL_USER: user
          MYSQL_PASSWORD: user123
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        volumes:
          - ${{ github.workspace }}/db_files_with_argon2hash_passwd:/tmp/db_files

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'  # Alternative distribution options are available.

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Attendre que MariaDB soit prêt
      - name: Wait for MariaDB to be ready
        run: |
          until docker exec $(docker ps -q --filter "ancestor=mariadb:10.4.1") mysqladmin --user=root --password=root123 --host=127.0.0.1 --port=3306 ping --silent; do
            echo "Waiting for MariaDB to be ready..."
            sleep 5
          done

       # Vérifier si /tmp existe dans le conteneur et que les fichiers sont bien montés
      - name: Verify /tmp/db_files directory and files
        run: |
          docker exec $(docker ps -q --filter "ancestor=mariadb:10.4.1") ls -la /tmp/db_files
          ls ./db_files_with_argon2hash_passwd/projet_devops.sql
          ls ./db_files_with_argon2hash_passwd/projet_devops_test.sql

      # Importer projet_devops.sql depuis le volume monté
      - name: Import projet_devops.sql
        run: |
          docker exec -i $(docker ps -q --filter "ancestor=mariadb:10.4.1") mysql -u root -proot123 projet_devops < /tmp/db_files/projet_devops.sql

      # Importer projet_devops_test.sql depuis le volume monté
      - name: Import projet_devops_test.sql
        run: |
          docker exec -i $(docker ps -q --filter "ancestor=mariadb:10.4.1") mysql -u root -proot123 projet_devops_test < /tmp/db_files/projet_devops_test.sql

      - name: Build and analyze
        working-directory: ./_00_ASBank2023
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=llUnknowUsernamell_projet-DevOps-grp1
